// Generated by CoffeeScript 1.6.3
module.exports = {
  wait: 1000,
  intro: true,
  action: 'create',
  exit: false,
  input: process.stdin,
  output: process.stdout,
  completer: null,
  terminal: !!process.stdout.isTTY,
  commands: "[c]reate  Create your new project (default).\n[j]ump    Jump to an already answered question.\n[l]aod    Load a saved project definition.\n[q]uit    Cancel the project creation and leave.\n[r]eset   Erase previous answers.\n[s]ave    Write this project definition to a file for later usage.\n[v]iew    View previous answers.\n\nPress [enter] to start/resume your project creation or choose one of the command above",
  intro: "Let's create our new Node.js project.\nAt any point in time, press [esc] to view the help.",
  invalid: 'The format of this answer is invalid',
  required: 'This question is required, please answer it.',
  save_where: 'Where would you like to save your project definition?',
  save_successfull: 'Project definition was successfully written',
  enoent: 'This file does not exists',
  yes: 'yes',
  no: 'no',
  max_index: 0,
  index: 0,
  questions: [
    {
      name: 'name',
      label: 'Project Name',
      required: true
    }, {
      name: 'description',
      label: 'Project Description',
      "default": ''
    }, {
      name: 'location',
      label: 'Project location',
      "default": function(answers) {
        return "./" + answers.name;
      },
      required: true
    }, {
      name: 'git',
      label: 'Is this a GIT repository',
      type: 'boolean',
      "default": true
    }, {
      name: 'github',
      label: 'GitHub URL',
      "if": function(answers) {
        return answers.git;
      },
      match: [/^\w+@github.com:(.*)\/(.*)\.git/, /^\w+:\/\/github.com\/(.*)\/(.*)\.git/, /^http:\/\/www\.github\.com/]
    }, {
      name: 'mklicense',
      label: 'Create license file',
      type: 'boolean',
      "default": true
    }, {
      name: 'license',
      label: 'Choose a license or press enter',
      values: ['mit', 'bsd', 'apache'],
      "default": 'mit',
      "if": function(answers) {
        return answers.mklicense;
      }
    }, {
      name: 'mkchangelog',
      label: 'Create changelog file',
      type: 'boolean',
      "default": true
    }, {
      name: 'testing',
      label: 'Are you testing your code',
      type: 'boolean'
    }, {
      name: 'test_tool',
      label: 'Which testing tool are you using?',
      values: ['mocha', 'jasmine-node'],
      "default": 'mocha',
      "if": function(answers) {
        return answers.testing;
      }
    }, {
      name: 'coverage',
      label: 'Are you using code coverage',
      type: 'boolean'
    }, {
      name: 'coverage_tool',
      label: 'Which covering tool are you using?',
      values: ['istanbul', 'jscoverage'],
      "default": 'mocha',
      "if": function(answers) {
        return answers.testing;
      }
    }, {
      name: 'dependencies',
      label: 'List of dependencies ("name[=version],...")'
    }, {
      name: 'devDependencies',
      label: 'List of development dependencies ("name[=version],...")'
    }, {
      name: 'optionalDependencies',
      label: 'List of optional dependencies ("name[=version],...")'
    }, {
      name: 'coffeescript',
      label: 'Are you planning to use coffeescript',
      type: 'boolean',
      "default": true
    }, {
      name: 'mksample',
      label: 'Create a sample folder',
      type: 'boolean',
      "default": true
    }, {
      name: 'mksample_location',
      label: 'Sample location',
      "default": './doc'
    }, {
      name: 'travis',
      label: 'Do you wish to test against travis?',
      type: 'boolean',
      "default": true
    }, {
      name: 'travis_nodejs_versions',
      label: 'Wish NodeJs version for Travis',
      "default": '0.10.0, 0.11.0'
    }, {
      name: 'doc',
      label: 'Do you plan to write documentation?',
      type: 'boolean',
      "default": true
    }, {
      name: 'doc_type',
      label: 'Inside a folder or a git branch?',
      type: 'string',
      values: ['folder', 'branch'],
      "default": 'folder',
      "if": function(answers) {
        return answers.git;
      }
    }, {
      name: 'doc_folder',
      label: 'Folder location',
      type: 'string',
      required: true,
      "default": './doc',
      "if": function(answers) {
        return answers.doc_type === 'folder' || !answers.git;
      }
    }, {
      name: 'doc_branch',
      label: 'Branch name',
      type: 'string',
      required: true,
      "if": function(answers) {
        return answers.doc_type === 'branch';
      }
    }
  ]
};
